import asyncio
import json
from app.redis_client import get_redis
import logging

logger = logging.getLogger(__name__)

async def publish_event(channel: str, message: dict):
    r = await get_redis()
    await r.publish(channel, json.dumps(message))

async def listen_to_orders():
    r = await get_redis()
    pubsub = r.pubsub()
    await pubsub.subscribe("orders")

    logger.info("üîî –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª 'orders' –∑–∞–ø—É—â–µ–Ω–∞")

    async for msg in pubsub.listen():
        if msg['type'] == 'message':
            try:
                data = json.loads(msg['data'])
                logger.info(f"üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ: {data}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–±—ã—Ç–∏—è: {e}")